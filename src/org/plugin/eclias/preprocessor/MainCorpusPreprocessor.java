package org.plugin.eclias.preprocessor;

import java.io.File;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IWorkspace;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;

public class MainCorpusPreprocessor
{
	
	static void testSystem() throws Exception
	{
		IWorkspace workspace = ResourcesPlugin.getWorkspace();
    	IWorkspaceRoot root = workspace.getRoot();
    	// Get all projects in the workspace
    	IProject[] projects = root.getProjects();

    	for (IProject project : projects) {
    		
    		if(project.isNatureEnabled("org.eclipse.jdt.core.javanature"))
    		{
    			String projectsname = project.toString();
        		System.out.println(projectsname);
    			String inputFileNameCorpus = System.getProperty("user.dir")+"/inputFiles/" + projectsname;

    			File outputFolder1 = new File(System.getProperty("user.dir")+"/preprocessedFiles/" + projectsname);
    			outputFolder1.mkdirs();
    			// Output folder
    			String outputFolder = System.getProperty("user.dir")+"/preprocessedFiles/" + projectsname + "/";

    			CorpusPreprocessor corpusPreprocessor=new CorpusPreprocessor(inputFileNameCorpus,outputFolder);
    			corpusPreprocessor.preprocessCorpus();
    		
    		}
    		else {
				System.out.println("error");
			}	
    		} 
    			
	}

	public static void main(String[] args) throws Exception
	{
		testSystem();
		if (1==1)
			return;
//		
//		args=new String[2];
//		args[0]="TestCases/Input/Corpus-jEdit4.3.corpusRawMethodLevelGranularity";
//		args[1]="TestCases/Output/";
		
		if (args.length!=2)
		{
			System.err.println("Preprocesses (i.e., removes non-literals, splits identifiers, eliminates stop words and stems) a corpus generated by CorpusGenerator");
			System.err.println("Usage:");
			System.err.println("  java -jar CorpusPreprocessor.jar inputFileNameCorpus outputFolder");
			System.err.println();
			System.err.println("Where:");
			System.err.println("  inputFileNameCorpus");
			System.err.println("    is a file name containing the corpus. Each line represents a document. The corpus can be at method, file or class level granularity. This file should be the one with the extension .corpusRaw[File/Method/Class]LevelGranularity produced by CorpusGenerator");
			System.err.println("  outputFolder");
			System.err.println("    is the folder name where the preprocessed corpus will be saved");
			System.err.println();
			System.err.println("The output produced by this tool will contain the following files (assuming the input file name is Corpus-System.[extension]):");
			System.err.println("  Corpus-System"+CorpusPreprocessor.SUFFIX_AFTER_SPLIT+".[extension]");
			System.err.println("    contains the corpus after eliminating non-literals (e.g., special characters) and after splitting the identifiers using the CamelCase algorithm");
			System.err.println("  Corpus-System"+CorpusPreprocessor.SUFFIX_AFTER_SPLIT_STOP+".[extension]");
			System.err.println("    contains the corpus after eliminating non-literals, after splitting, and after eliminating stop words");
			System.err.println("  Corpus-System"+CorpusPreprocessor.SUFFIX_AFTER_SPLIT_STOP_STEM+".[extension]");
			System.err.println("    contains the corpus after eliminating non-literals, after splitting, after eliminating stop words and after stemming using the Porter stemmer. This file contains the final version of the preprocessed corpus");
			System.err.println();
			System.err.println("Example:");
			System.err.println("  java -jar CorpusPreprocessor.jar TestCases/Input/Corpus-jEdit4.3.corpusRawMethodLevelGranularity TestCases/Output/");
			System.exit(1);
		}
		
		CorpusPreprocessor corpusPreprocessor=new CorpusPreprocessor(args[0],args[1]);
		corpusPreprocessor.preprocessCorpus();
	}
}
